I"Ñ<p><span style="font-size:20px;font-weight:bold">My code:</span></p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
</pre></td><td class="code"><pre><span class="cp">#include &lt;bits/stdc++.h&gt;
</span>

<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="n">measure</span><span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="mi">3</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">EVEN</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
    <span class="n">LIGHT</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span><span class="p">,</span>
    <span class="n">HEAVY</span> <span class="o">=</span> <span class="mi">50</span><span class="p">;</span>

<span class="kt">bool</span> <span class="nf">isBalanced</span><span class="p">(</span><span class="kt">char</span> <span class="n">ch</span><span class="p">,</span><span class="kt">bool</span> <span class="n">isHeavy</span><span class="p">){</span>
	<span class="kt">int</span> <span class="n">leftWeight</span><span class="p">,</span><span class="n">rightWeight</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">leftWeight</span> <span class="o">=</span> <span class="n">rightWeight</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	    <span class="k">for</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="n">k</span><span class="o">:</span> <span class="n">measure</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">==</span><span class="n">ch</span><span class="p">)</span><span class="n">leftWeight</span> <span class="o">+=</span> <span class="p">(</span><span class="n">isHeavy</span><span class="o">?</span><span class="n">HEAVY</span><span class="o">:</span><span class="n">LIGHT</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="k">for</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="n">k</span><span class="o">:</span><span class="n">measure</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">1</span><span class="p">]){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">==</span><span class="n">ch</span><span class="p">)</span><span class="n">rightWeight</span><span class="o">+=</span><span class="p">(</span><span class="n">isHeavy</span><span class="o">?</span><span class="n">HEAVY</span><span class="o">:</span><span class="n">LIGHT</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="k">if</span><span class="p">(</span><span class="n">measure</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="o">==</span><span class="s">"even"</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">leftWeight</span><span class="o">!=</span><span class="n">rightWeight</span><span class="p">)</span><span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">measure</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="o">==</span><span class="s">"up"</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">leftWeight</span><span class="o">&lt;=</span><span class="n">rightWeight</span><span class="p">)</span><span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="k">else</span><span class="p">{</span>
			<span class="k">if</span><span class="p">(</span><span class="n">leftWeight</span><span class="o">&gt;=</span><span class="n">rightWeight</span><span class="p">)</span><span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
			<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
<span class="p">{</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
			<span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">measure</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="sc">'A'</span><span class="p">;</span><span class="n">c</span><span class="o">&lt;=</span><span class="sc">'L'</span><span class="p">;</span><span class="n">c</span><span class="o">++</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">isBalanced</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="nb">true</span><span class="p">)){</span>
			<span class="n">printf</span><span class="p">(</span><span class="s">"Coin %c is heavier</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="n">c</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="k">if</span><span class="p">(</span><span class="n">isBalanced</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="nb">false</span><span class="p">)){</span>
			<span class="n">printf</span><span class="p">(</span><span class="s">"Coin %c is lighter</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="n">c</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="p">}</span>
		<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

	<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

:ET