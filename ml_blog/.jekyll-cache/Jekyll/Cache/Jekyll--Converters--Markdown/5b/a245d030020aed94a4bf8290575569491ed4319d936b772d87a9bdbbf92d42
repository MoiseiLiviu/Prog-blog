I"÷<p><span style="font-size:20px;font-weight:bold">My code:</span></p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="code"><pre><span class="cp">#include &lt;bits/stdc++.h&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">N</span><span class="p">,</span><span class="n">M</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">N</span><span class="p">){</span>
		<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">v</span><span class="p">(</span><span class="n">N</span><span class="p">);</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">N</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span><span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
		<span class="n">sort</span><span class="p">(</span><span class="n">v</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">v</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
		<span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">M</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">minDelta</span> <span class="o">=</span> <span class="n">INT_MAX</span><span class="p">,</span><span class="n">l</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">iterator</span> <span class="o">=</span> <span class="n">v</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span><span class="n">iterator</span><span class="o">!=</span><span class="n">v</span><span class="p">.</span><span class="n">end</span><span class="p">();</span><span class="n">iterator</span><span class="o">++</span><span class="p">){</span>
			<span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="o">*</span><span class="n">iterator</span><span class="p">;</span>
			<span class="kt">int</span> <span class="n">pair1</span> <span class="o">=</span> <span class="n">binary_search</span><span class="p">(</span><span class="n">v</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">iterator</span><span class="p">,</span><span class="n">M</span><span class="o">-</span><span class="n">r</span><span class="p">);</span>
			<span class="kt">int</span> <span class="n">pair2</span> <span class="o">=</span> <span class="n">binary_search</span><span class="p">(</span><span class="n">iterator</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">v</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">M</span><span class="o">-</span><span class="n">r</span><span class="p">);</span>
			<span class="k">if</span><span class="p">(</span><span class="n">pair1</span><span class="o">||</span><span class="n">pair2</span><span class="p">){</span>
				<span class="k">if</span><span class="p">(</span><span class="n">abs</span><span class="p">(</span><span class="n">M</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">r</span><span class="p">)</span><span class="o">&lt;</span><span class="n">minDelta</span><span class="p">){</span>
					<span class="n">minDelta</span><span class="o">=</span><span class="n">abs</span><span class="p">(</span><span class="n">M</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">r</span><span class="p">);</span>
					<span class="n">l</span><span class="o">=</span><span class="n">r</span><span class="o">&gt;</span><span class="n">M</span><span class="o">-</span><span class="n">r</span><span class="o">?</span><span class="n">M</span><span class="o">-</span><span class="n">r</span><span class="o">:</span><span class="n">r</span><span class="p">;</span>
				<span class="p">}</span>
			<span class="p">}</span>
		<span class="p">}</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"Peter should buy books whose prices are %d and %d.</span><span class="se">\n\n</span><span class="s">"</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">M</span><span class="o">-</span><span class="n">l</span><span class="p">);</span>
	<span class="p">}</span>	
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
:ET